datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[] // Relacja do Product
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  categoryId  Int
  description String?
  price       Float
  stockCount  Int
  brand       String
  imageUrl    String?
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  reviews     Review[]
  carts       Cart[]   @relation("ProductCart") // Relacja do Cart
}

model User {
  id           Int      @id @default(autoincrement())
  username     String
  email        String   @unique
  passwordHash String
  firstName    String?
  lastName     String?
  reviews      Review[]
  carts        Cart[]   @relation("UserCart") // Relacja do Cart
}

model Review {
  id        Int     @id @default(autoincrement())
  productId Int
  userId    Int
  rating    Int
  comment   String?
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade) // Relacja do Product
  user      User    @relation(fields: [userId], references: [id]) // Relacja do User
}

model Cart {
  id         Int      @id @default(autoincrement())
  userId     Int
  productIds Int[]    // Lista identyfikatorów produktów
  quantities Json?    // Ilości produktów w formacie JSON
  addedAt    DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserCart")
  products   Product[] @relation("ProductCart") // Relacja do Product

  @@unique([userId]) // Każdy użytkownik ma tylko jeden koszyk
}